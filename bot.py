import sqlite3
import telebot
import logging
from telebot import types
import requests

# –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –±–æ—Ç–∞
DB_NAME = 'bot_database.db'  # –ù–∞–∑–≤–∞ —Ñ–∞–π–ª—É –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
TOKEN = '7841518347:AAENiHfUyxNWFKS_qJLH8p0eOaq6kPJ5WQU'  # –ó–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤—ñ–π —Ç–æ–∫–µ–Ω
bot = telebot.TeleBot(TOKEN)

logging.basicConfig(
    filename='bot.log',
    format='%(asctime)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
def connect_to_db():
    return sqlite3.connect(DB_NAME)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
def initialize_database():
    connection = sqlite3.connect(DB_NAME)
    cursor = connection.cursor()

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    cursor.execute(''' 
        CREATE TABLE IF NOT EXISTS Users (
            Id INTEGER PRIMARY KEY,
            Counter INTEGER DEFAULT 0
        )
    ''')

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –ø–æ—à—É–∫—É
    cursor.execute(''' 
        CREATE TABLE IF NOT EXISTS SearchResult (
            Id INTEGER PRIMARY KEY AUTOINCREMENT,
            UserId INTEGER,
            Link TEXT,
            FOREIGN KEY(UserId) REFERENCES Users(Id)
        )
    ''')

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ –¥–ª—è –≤–∏–±—Ä–∞–Ω–∏—Ö –≤—ñ–¥–µ–æ
    cursor.execute(''' 
        CREATE TABLE IF NOT EXISTS Favorites (
            Id INTEGER PRIMARY KEY AUTOINCREMENT,
            UserId INTEGER,
            Link TEXT,
            FOREIGN KEY(UserId) REFERENCES Users(Id)
        )
    ''')
    connection.commit()
    connection.close()

# –î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
def add_user(chat_id):
    connection = connect_to_db()
    cursor = connection.cursor()
    cursor.execute('INSERT OR IGNORE INTO Users (Id) VALUES (?)', (chat_id,))
    connection.commit()
    connection.close()

# –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –ø–æ—à—É–∫—É
def save_search_results(chat_id, links):
    connection = connect_to_db()
    cursor = connection.cursor()
    cursor.execute('DELETE FROM SearchResult WHERE UserId = ?', (chat_id,))
    connection.commit()

    for link in links:
        cursor.execute('INSERT INTO SearchResult (UserId, Link) VALUES (?, ?)', (chat_id, link))
    connection.commit()
    connection.close()

# –î–æ–¥–∞–≤–∞–Ω–Ω—è –≤—ñ–¥–µ–æ –≤ –æ–±—Ä–∞–Ω–µ
def add_to_favorites(chat_id, link):
    connection = connect_to_db()
    cursor = connection.cursor()
    cursor.execute('INSERT INTO Favorites (UserId, Link) VALUES (?, ?)', (chat_id, link))
    connection.commit()
    connection.close()

# –í–∏–¥–∞–ª–µ–Ω–Ω—è –≤—ñ–¥–µ–æ –∑ –æ–±—Ä–∞–Ω–æ–≥–æ
def remove_from_favorites(chat_id, link):
    connection = connect_to_db()
    cursor = connection.cursor()
    cursor.execute('DELETE FROM Favorites WHERE UserId = ? AND Link = ?', (chat_id, link))
    connection.commit()
    connection.close()

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –æ–±—Ä–∞–Ω–∏—Ö –≤—ñ–¥–µ–æ
def get_favorites(chat_id):
    connection = connect_to_db()
    cursor = connection.cursor()
    cursor.execute('SELECT Link FROM Favorites WHERE UserId = ?', (chat_id,))
    favorites = cursor.fetchall()
    connection.close()
    return [item[0] for item in favorites]

# –ü–æ—à—É–∫ –≤—ñ–¥–µ–æ –Ω–∞ YouTube
def youtube_search(query, sort_by="relevance"):
    API_KEY = 'AIzaSyBKuvZ7SGUXkvw8vzaRCkHjxVWVnhx32YE'  # –ó–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤—ñ–π API –∫–ª—é—á
    url = 'https://www.googleapis.com/youtube/v3/search'
    params = {
        'part': 'snippet',
        'q': query,
        'type': 'video',
        'maxResults': 5,
        'order': sort_by,
        'key': API_KEY
    }
    response = requests.get(url, params=params)
    data = response.json()
    links = []
    for item in data.get('items', []):
        video_id = item['id']['videoId']
        links.append(f'https://www.youtube.com/watch?v={video_id}')
    return links

# –û—Å–Ω–æ–≤–Ω–µ –º–µ–Ω—é –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton('/search'), types.KeyboardButton('/favorite'))
    markup.add(types.KeyboardButton('/recommend'), types.KeyboardButton('/help'))
    return markup

# –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /start
@bot.message_handler(commands=['start'])
def handle_start(message):
    chat_id = message.chat.id
    add_user(chat_id)
    bot.send_message(chat_id, '–ü—Ä–∏–≤—ñ—Ç! –û–±–µ—Ä–∏ –æ–¥–Ω—É –∑ –∫–æ–º–∞–Ω–¥ –Ω–∏–∂—á–µ:', reply_markup=main_menu())  # –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è üòä

# –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /help
@bot.message_handler(commands=['help'])
def handle_help(message):
    chat_id = message.chat.id
    help_text = (
        "–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:\n"
        "/search - –ü–æ—à—É–∫ –≤—ñ–¥–µ–æ –Ω–∞ YouTube üîç\n"
        "/favorite - –ü–µ—Ä–µ–≥–ª—è–¥ –æ–±—Ä–∞–Ω–∏—Ö –≤—ñ–¥–µ–æ ‚ù§Ô∏è\n"
        "/recommend - –û—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó (–ø–æ–∫–∏ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ) üîú\n"
        "/help - –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ–ø–æ–º–æ–≥—É üí°\n"
        "üìã –ü—Ä–æ –ø—Ä–æ–≥—Ä–∞–º—É:\n"
        "–¶–µ–π –±–æ—Ç –¥–æ–ø–æ–º–∞–≥–∞—î —à—É–∫–∞—Ç–∏ –≤—ñ–¥–µ–æ –Ω–∞ YouTube, –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —ó—Ö —É —Å–ø–∏—Å–æ–∫ –æ–±—Ä–∞–Ω–æ–≥–æ —Ç–∞ –ø–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ –≤—ñ–¥–µ–æ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–∞—à–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤. \n"
        "–í–∏ –º–æ–∂–µ—Ç–µ –ª–µ–≥–∫–æ –¥–æ–¥–∞–≤–∞—Ç–∏ –≤—ñ–¥–µ–æ –¥–æ –æ–±—Ä–∞–Ω–æ–≥–æ —Ç–∞ –≤–∏–¥–∞–ª—è—Ç–∏ —ó—Ö –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∑—Ä—É—á–Ω–∏—Ö –∫–Ω–æ–ø–æ–∫.\n"
        "üë®‚Äçüíª –ê–≤—Ç–æ—Ä: –ö—Ä–∞–≤—á–µ–Ω–∫–æ –ê–Ω–Ω–∞\n"
        "üìÖ –î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è: 25 –≥—Ä—É–¥–Ω—è 2024 —Ä–æ–∫—É\n\n"
        "–ó–∞–ª–∏—à–∞–π—Ç–µ—Å—è –Ω–∞ –∑–≤'—è–∑–∫—É —Ç–∞ –∫–æ—Ä–∏—Å—Ç—É–π—Ç–µ—Å—è –≤—Å—ñ–º–∞ –º–æ–∂–ª–∏–≤–æ—Å—Ç—è–º–∏ –±–æ—Ç–∞! üòä"
    )
    bot.send_message(chat_id, help_text, reply_markup=main_menu())  # –î–æ–ø–æ–º–æ–≥–∞

# –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /search
@bot.message_handler(commands=['search'])
def handle_search(message):
    chat_id = message.chat.id
    bot.send_message(chat_id, '–í–≤–µ–¥—ñ—Ç—å –∑–∞–ø–∏—Ç –¥–ª—è –ø–æ—à—É–∫—É: üìù', reply_markup=types.ReplyKeyboardRemove())  # –ó–∞–ø–∏—Ç –Ω–∞ –ø–æ—à—É–∫

    @bot.message_handler(func=lambda msg: True)
    def handle_query(msg):
        query = msg.text
        links = youtube_search(query)
        save_search_results(chat_id, links)

        for link in links:
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton("–î–æ–¥–∞—Ç–∏ –≤ –æ–±—Ä–∞–Ω–µ ‚ù§Ô∏è", callback_data=f'add_favorite_{link}'))
            bot.send_message(chat_id, link, reply_markup=markup)

        bot.send_message(chat_id, '–í–∏ –º–æ–∂–µ—Ç–µ –¥–æ–¥–∞—Ç–∏ –≤—ñ–¥–µ–æ –≤ –æ–±—Ä–∞–Ω–µ, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –∫–Ω–æ–ø–∫—É.', reply_markup=main_menu())  # –ü–æ—è—Å–Ω–µ–Ω–Ω—è

# –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /favorite
@bot.message_handler(commands=['favorite'])
def handle_favorite(message):
    chat_id = message.chat.id
    favorites = get_favorites(chat_id)

    if favorites:
        bot.send_message(chat_id, '–í–∞—à—ñ –æ–±—Ä–∞–Ω—ñ –≤—ñ–¥–µ–æ: ‚ù§Ô∏è')
        for link in favorites:
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton("–í–∏–¥–∞–ª–∏—Ç–∏ –∑ –æ–±—Ä–∞–Ω–æ–≥–æ ‚ùå", callback_data=f'remove_favorite_{link}'))
            bot.send_message(chat_id, link, reply_markup=markup)
    else:
        bot.send_message(chat_id, '–í–∞—à —Å–ø–∏—Å–æ–∫ –æ–±—Ä–∞–Ω–∏—Ö –ø–æ—Ä–æ–∂–Ω—ñ–π. ü•≤')
    bot.send_message(chat_id, '–í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –∫–æ–º–∞–Ω–¥ –Ω–∏–∂—á–µ:', reply_markup=main_menu())  # –ó–∞–ø–∏—Ç –Ω–∞ –≤–∏–±—ñ—Ä

# –û–±—Ä–æ–±–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤ –æ–±—Ä–∞–Ω–µ —á–µ—Ä–µ–∑ inline –∫–Ω–æ–ø–∫—É
@bot.callback_query_handler(func=lambda call: call.data.startswith('add_favorite_'))
def handle_add_favorite(callback_query):
    chat_id = callback_query.message.chat.id
    link = callback_query.data.replace('add_favorite_', '')
    add_to_favorites(chat_id, link)
    bot.answer_callback_query(callback_query.id, text=f'–í—ñ–¥–µ–æ –¥–æ–¥–∞–Ω–æ –≤ –æ–±—Ä–∞–Ω–µ: {link} üòä')
    bot.send_message(chat_id, f'–í—ñ–¥–µ–æ –¥–æ–¥–∞–Ω–æ –≤ –æ–±—Ä–∞–Ω–µ: {link}')
    bot.send_message(chat_id, '–í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –∫–æ–º–∞–Ω–¥ –Ω–∏–∂—á–µ:', reply_markup=main_menu())

# –û–±—Ä–æ–±–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑ –æ–±—Ä–∞–Ω–æ–≥–æ —á–µ—Ä–µ–∑ inline –∫–Ω–æ–ø–∫—É
@bot.callback_query_handler(func=lambda call: call.data.startswith('remove_favorite_'))
def handle_remove_favorite(callback_query):
    chat_id = callback_query.message.chat.id
    link = callback_query.data.replace('remove_favorite_', '')
    remove_from_favorites(chat_id, link)
    bot.answer_callback_query(callback_query.id, text=f'–í—ñ–¥–µ–æ –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –æ–±—Ä–∞–Ω–æ–≥–æ: {link} üò¢')
    bot.send_message(chat_id, f'–í—ñ–¥–µ–æ –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –æ–±—Ä–∞–Ω–æ–≥–æ: {link}')
    bot.send_message(chat_id, '–í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –∫–æ–º–∞–Ω–¥ –Ω–∏–∂—á–µ:', reply_markup=main_menu())

# –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /recommend
@bot.message_handler(commands=['recommend'])
def handle_recommend(message):
    chat_id = message.chat.id
    bot.send_message(chat_id, '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–∞—à–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤ –ø–æ–∫–∏ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ! üîú')
    bot.send_message(chat_id, '–í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –∫–æ–º–∞–Ω–¥ –Ω–∏–∂—á–µ:', reply_markup=main_menu())  # –†–æ–∑—Ä–æ–±–∫–∞

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    initialize_database()
    bot.polling(none_stop=True)
